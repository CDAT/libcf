version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh
        
aliases:

  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightly --depth 1 git@github.com:CDAT/cdat workspace/cdat
      ls workspace/cdat
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'
      
  - &create_conda_env
    name: create_conda_env
    environment:
       CHANNELS: "-c cdat/label/unstable -c cdat/label/nightly -c conda-forge -c cdat"
       PKGS: ""
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       conda config --set always_yes yes --set changeps1 no
       conda update -y -q conda
       conda config --set anaconda_upload no
       # Libraries don't need to be compile on differenc python versions
       conda create -n py3 -c conda-forge "python>3"
       conda install -n py3 $CHANNELS $PKGS $CONDA_COMPILER 

  - &setup_libcf
    name: upload_libcf
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       source activate py3
       if [ $(uname) == "Linux" ];then
         export LDSHARED="$CC -shared -pthread"
         LDSHARED="$CC -shared -pthread" python setup.py install
       else
         python setup.py install
       fi

  - &run_libcf_tests
    name: run_cdms_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export CDAT_ANONYMOUS_LOG=False
       source activate py3
       python -c "import pycf"
       python -c "import  pycf.libCFConfig:
       RESULT=$?
       echo "*** $py3 test result: "${RESULT}
       exit $RESULT

  - &conda_upload
    name: conda_upload
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export LABEL="nightly";
       if [ $CIRCLE_BRANCH == "master" ]; then
          conda install -n root conda-build anaconda-client
          bash ./ci-support/conda_upload.sh
       fi
       if [ $CIRCLE_BRANCH != "master" ]; then
           export LABEL="unstable";
           echo "NOTE: upload LABEL="${LABEL}
           conda install -n root conda-build anaconda-client;
           bash ./ci-support/conda_upload.sh;
       fi

jobs:
  macos_libcf:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "test_macos_libcf"
      CONDA_COMPILER: "gcc"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_libcf
      - run: *run_libcf_tests
      - run: *conda_upload
      - store_artifacts:
          path: tests_html
          destination: tests_html
      - store_artifacts:
          path: tests_png
          destination: tests_png

  linux_libcf:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "test_linux_libcf"
      CONDA_COMPILER: "gcc_linux-64"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_libcf
      - run: *run_libcf_tests
      - run: *conda_upload
      - store_artifacts:
          path: tests_html
          destination: tests_html
      - store_artifacts:
          path: tests_png
          destination: tests_png


workflows:
  version: 2
  cdms_test:
    jobs:
      - macos_libcf
      - linux_libcf

