# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright 2006-2011, see the COPYRIGHT file for more information.

# This automake file is in charge of building the src directory.


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = tst_coords$(EXEEXT) tst_files$(EXEEXT) \
	tst_vars$(EXEEXT) tst_cvars$(EXEEXT) tst_vert$(EXEEXT) \
	tst_subsets$(EXEEXT) tst_princeton$(EXEEXT) \
	tst_listitem$(EXEEXT) tst_nccf_get_flat_index$(EXEEXT) \
	tst_nccf_index2vector$(EXEEXT) tst_nccf_varObj$(EXEEXT) \
	tst_solve$(EXEEXT) tst_linear_interp$(EXEEXT) \
	tst_nccf_get_bipolar_cap$(EXEEXT) \
	tst_nccf_get_tripolar_grid$(EXEEXT) \
	tst_nccf_generate_id$(EXEEXT) \
	tst_nccf_get_tripolar_halfgrid$(EXEEXT) \
	tst_nccf_get_cubedsphere_grid$(EXEEXT) \
	tst_nccf_find_adjacent$(EXEEXT) \
	tst_nccf_linear_interp_mask$(EXEEXT) \
	tst_nccf_keyvalue$(EXEEXT) tst_nccf_get_flat_index$(EXEEXT) \
	tst_nccf_index2vector$(EXEEXT) tst_nccf_varObj$(EXEEXT) \
	tst_solve$(EXEEXT) tst_linear_interp$(EXEEXT) \
	tst_nccf_get_bipolar_cap$(EXEEXT) \
	tst_nccf_get_tripolar_grid$(EXEEXT) \
	tst_nccf_generate_id$(EXEEXT) \
	tst_nccf_get_tripolar_halfgrid$(EXEEXT) \
	tst_nccf_get_cubedsphere_grid$(EXEEXT) \
	tst_nccf_find_adjacent$(EXEEXT) \
	tst_nccf_linear_interp_mask$(EXEEXT) \
	tst_nccf_keyvalue$(EXEEXT) $(am__EXEEXT_1)

#noinst_PROGRAMS = tst_nccf_get_flat_index tst_nccf_index2vector		
@BUILD_F90_TRUE@am__append_1 = libcff_src.la
# if USE_NETCDF4
# check_PROGRAMS += tst_f03_file
# tst_f03_file_SOURCES = tst_f03_file.f90
# endif # USE_NETCDF4
@BUILD_F90_TRUE@am__append_2 = libcf_src.la
@EXTRA_DATA_TESTS_TRUE@am__append_3 = tst_example_data
subdir = src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/cf_config.h \
	$(top_builddir)/nfconfig.inc
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libcf_src_la_LIBADD =
am_libcf_src_la_OBJECTS = nccoord.lo cffiles.lo cfvars.lo cfcvars.lo \
	cfsubsets.lo cferror.lo cdTimeConv.lo timeArith.lo timeConv.lo \
	libcfAddOn.lo cflistitem.lo nccf_varObj.lo nccf_strerror.lo \
	nccf_solve.lo nccf_put_var_slice_text.lo \
	nccf_linesearch_indices.lo nccf_linear_interp.lo \
	nccf_index_to_corner_vector.lo nccf_index2vector.lo \
	nccf_handle_error.lo nccf_get_tripolar_halfgrid.lo \
	nccf_get_tripolar_grid.lo nccf_get_start_end_bound_indices.lo \
	nccf_get_position.lo nccf_get_multi_index.lo \
	nccf_get_linear_weights.lo nccf_get_flat_index.lo \
	nccf_get_cubedsphere_grid.lo nccf_get_bipolar_cap.lo \
	nccf_generate_id.lo nccf_find_next_indices.lo \
	nccf_find_next_adjcnt_index.lo nccf_find_next_adjacent.lo \
	nccf_find_indices.lo nccf_add_id_to_files.lo nccf_keyvalue.lo \
	nccf_get_distance_in_coord.lo nccf_linear_interp_mod.lo
libcf_src_la_OBJECTS = $(am_libcf_src_la_OBJECTS)
libcf_src_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libcf_src_la_LDFLAGS) $(LDFLAGS) -o $@
libcff_src_la_LIBADD =
am__libcff_src_la_SOURCES_DIST = cffcvars.f90
@BUILD_F90_TRUE@am_libcff_src_la_OBJECTS = cffcvars.lo
libcff_src_la_OBJECTS = $(am_libcff_src_la_OBJECTS)
@BUILD_F90_TRUE@am_libcff_src_la_rpath = -rpath $(libdir)
@EXTRA_DATA_TESTS_TRUE@am__EXEEXT_1 = tst_example_data$(EXEEXT)
tst_coords_SOURCES = tst_coords.c
tst_coords_OBJECTS = tst_coords.$(OBJEXT)
tst_coords_LDADD = $(LDADD)
tst_coords_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_cvars_SOURCES = tst_cvars.c
tst_cvars_OBJECTS = tst_cvars.$(OBJEXT)
tst_cvars_LDADD = $(LDADD)
tst_cvars_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_example_data_SOURCES = tst_example_data.c
tst_example_data_OBJECTS = tst_example_data.$(OBJEXT)
tst_example_data_LDADD = $(LDADD)
tst_example_data_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_files_SOURCES = tst_files.c
tst_files_OBJECTS = tst_files.$(OBJEXT)
tst_files_LDADD = $(LDADD)
tst_files_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_linear_interp_SOURCES = tst_linear_interp.c
tst_linear_interp_OBJECTS = tst_linear_interp.$(OBJEXT)
tst_linear_interp_LDADD = $(LDADD)
tst_linear_interp_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_listitem_SOURCES = tst_listitem.c
tst_listitem_OBJECTS = tst_listitem.$(OBJEXT)
tst_listitem_LDADD = $(LDADD)
tst_listitem_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_nccf_find_adjacent_SOURCES = tst_nccf_find_adjacent.c
tst_nccf_find_adjacent_OBJECTS = tst_nccf_find_adjacent.$(OBJEXT)
tst_nccf_find_adjacent_LDADD = $(LDADD)
tst_nccf_find_adjacent_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__append_2)
tst_nccf_generate_id_SOURCES = tst_nccf_generate_id.c
tst_nccf_generate_id_OBJECTS = tst_nccf_generate_id.$(OBJEXT)
tst_nccf_generate_id_LDADD = $(LDADD)
tst_nccf_generate_id_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_nccf_get_bipolar_cap_SOURCES = tst_nccf_get_bipolar_cap.c
tst_nccf_get_bipolar_cap_OBJECTS = tst_nccf_get_bipolar_cap.$(OBJEXT)
tst_nccf_get_bipolar_cap_LDADD = $(LDADD)
tst_nccf_get_bipolar_cap_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__append_2)
tst_nccf_get_cubedsphere_grid_SOURCES =  \
	tst_nccf_get_cubedsphere_grid.c
tst_nccf_get_cubedsphere_grid_OBJECTS =  \
	tst_nccf_get_cubedsphere_grid.$(OBJEXT)
tst_nccf_get_cubedsphere_grid_LDADD = $(LDADD)
tst_nccf_get_cubedsphere_grid_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__append_2)
tst_nccf_get_flat_index_SOURCES = tst_nccf_get_flat_index.c
tst_nccf_get_flat_index_OBJECTS = tst_nccf_get_flat_index.$(OBJEXT)
tst_nccf_get_flat_index_LDADD = $(LDADD)
tst_nccf_get_flat_index_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__append_2)
tst_nccf_get_tripolar_grid_SOURCES = tst_nccf_get_tripolar_grid.c
tst_nccf_get_tripolar_grid_OBJECTS =  \
	tst_nccf_get_tripolar_grid.$(OBJEXT)
tst_nccf_get_tripolar_grid_LDADD = $(LDADD)
tst_nccf_get_tripolar_grid_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__append_2)
tst_nccf_get_tripolar_halfgrid_SOURCES =  \
	tst_nccf_get_tripolar_halfgrid.c
tst_nccf_get_tripolar_halfgrid_OBJECTS =  \
	tst_nccf_get_tripolar_halfgrid.$(OBJEXT)
tst_nccf_get_tripolar_halfgrid_LDADD = $(LDADD)
tst_nccf_get_tripolar_halfgrid_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__append_2)
tst_nccf_index2vector_SOURCES = tst_nccf_index2vector.c
tst_nccf_index2vector_OBJECTS = tst_nccf_index2vector.$(OBJEXT)
tst_nccf_index2vector_LDADD = $(LDADD)
tst_nccf_index2vector_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__append_2)
tst_nccf_keyvalue_SOURCES = tst_nccf_keyvalue.c
tst_nccf_keyvalue_OBJECTS = tst_nccf_keyvalue.$(OBJEXT)
tst_nccf_keyvalue_LDADD = $(LDADD)
tst_nccf_keyvalue_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_nccf_linear_interp_mask_SOURCES = tst_nccf_linear_interp_mask.c
tst_nccf_linear_interp_mask_OBJECTS =  \
	tst_nccf_linear_interp_mask.$(OBJEXT)
tst_nccf_linear_interp_mask_LDADD = $(LDADD)
tst_nccf_linear_interp_mask_DEPENDENCIES = $(lib_LTLIBRARIES) \
	$(am__append_2)
tst_nccf_varObj_SOURCES = tst_nccf_varObj.c
tst_nccf_varObj_OBJECTS = tst_nccf_varObj.$(OBJEXT)
tst_nccf_varObj_LDADD = $(LDADD)
tst_nccf_varObj_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_princeton_SOURCES = tst_princeton.c
tst_princeton_OBJECTS = tst_princeton.$(OBJEXT)
tst_princeton_LDADD = $(LDADD)
tst_princeton_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_solve_SOURCES = tst_solve.c
tst_solve_OBJECTS = tst_solve.$(OBJEXT)
tst_solve_LDADD = $(LDADD)
tst_solve_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_subsets_SOURCES = tst_subsets.c
tst_subsets_OBJECTS = tst_subsets.$(OBJEXT)
tst_subsets_LDADD = $(LDADD)
tst_subsets_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_vars_SOURCES = tst_vars.c
tst_vars_OBJECTS = tst_vars.$(OBJEXT)
tst_vars_LDADD = $(LDADD)
tst_vars_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
tst_vert_SOURCES = tst_vert.c
tst_vert_OBJECTS = tst_vert.$(OBJEXT)
tst_vert_LDADD = $(LDADD)
tst_vert_DEPENDENCIES = $(lib_LTLIBRARIES) $(am__append_2)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
FCLD = $(FC)
FCLINK = $(LIBTOOL) --tag=FC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcf_src_la_SOURCES) $(libcff_src_la_SOURCES) \
	tst_coords.c tst_cvars.c tst_example_data.c tst_files.c \
	tst_linear_interp.c tst_listitem.c tst_nccf_find_adjacent.c \
	tst_nccf_generate_id.c tst_nccf_get_bipolar_cap.c \
	tst_nccf_get_cubedsphere_grid.c tst_nccf_get_flat_index.c \
	tst_nccf_get_tripolar_grid.c tst_nccf_get_tripolar_halfgrid.c \
	tst_nccf_index2vector.c tst_nccf_keyvalue.c \
	tst_nccf_linear_interp_mask.c tst_nccf_varObj.c \
	tst_princeton.c tst_solve.c tst_subsets.c tst_vars.c \
	tst_vert.c
DIST_SOURCES = $(libcf_src_la_SOURCES) \
	$(am__libcff_src_la_SOURCES_DIST) tst_coords.c tst_cvars.c \
	tst_example_data.c tst_files.c tst_linear_interp.c \
	tst_listitem.c tst_nccf_find_adjacent.c tst_nccf_generate_id.c \
	tst_nccf_get_bipolar_cap.c tst_nccf_get_cubedsphere_grid.c \
	tst_nccf_get_flat_index.c tst_nccf_get_tripolar_grid.c \
	tst_nccf_get_tripolar_halfgrid.c tst_nccf_index2vector.c \
	tst_nccf_keyvalue.c tst_nccf_linear_interp_mask.c \
	tst_nccf_varObj.c tst_princeton.c tst_solve.c tst_subsets.c \
	tst_vars.c tst_vert.c
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FC = @FC@
FCFLAGS = @FCFLAGS@
FCFLAGS_f90 = @FCFLAGS_f90@
FCLIBS = @FCLIBS@
FGREP = @FGREP@
GREP = @GREP@
HAVE_DARWIN = @HAVE_DARWIN@
HAVE_FORTRAN_2003 = @HAVE_FORTRAN_2003@
HAVE_LAPACK_LIB = @HAVE_LAPACK_LIB@
HAVE_LAPACK_NO_UNDERSCORE = @HAVE_LAPACK_NO_UNDERSCORE@
HAVE_LAPACK_UNDERSCORE = @HAVE_LAPACK_UNDERSCORE@
HAVE_SHARED = @HAVE_SHARED@
HAVE_UUID = @HAVE_UUID@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MOD_FLAG = @MOD_FLAG@
NCDUMP = @NCDUMP@
NCDUMPDIR = @NCDUMPDIR@
NETCDFDIR = @NETCDFDIR@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PYTHON = @PYTHON@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# Test programs will need to link to this library (libcf) and also
# netcdf.

# I think we always need this one
LDADD = ${lib_LTLIBRARIES} -lnetcdf -lm $(am__append_2)

# Initalize these.
AM_CPPFLAGS = -I$(top_srcdir)/include
AM_LDFLAGS = 
include_HEADERS = \
nccf_find_next_indices.h   \
nccf_keyvalue.h            


# This is our output, the NetCDF CF Library.
lib_LTLIBRARIES = libcf_src.la $(am__append_1)

# These linker flags specify libtool version info.
libcf_src_la_LDFLAGS = -version-info 0:0:0
@BUILD_F90_TRUE@libcff_src_la_DEPENDENCIES = libcf_api.f90
@BUILD_F90_TRUE@EXTRA_DIST = libcf_api.f90
@BUILD_F90_TRUE@libcff_src_la_SOURCES = cffcvars.f90

# This is the coordinate systems stuff.

# in memory variable, interpolation, indexing, ...
libcf_src_la_SOURCES = nccoord.c libcf_int.h cffiles.c cfvars.c \
	cfcvars.c cfsubsets.c cferror.c cdTimeConv.c cdmsint.h \
	timeArith.c timeConv.c libcfAddOn.c cflistitem.c cdms.h \
	cddrs.h drscdf.h cdunif.h nccf_varObj.c \
	nccf_varSetData_generic.h nccf_strerror.c nccf_solve.h \
	nccf_solve.c nccf_put_var_slice_text.c \
	nccf_linesearch_indices.h nccf_linesearch_indices.c \
	nccf_linear_interp.h nccf_linear_interp.c \
	nccf_index_to_corner_vector.c nccf_index2vector.c \
	nccf_handle_error.c nccf_get_tripolar_halfgrid.c \
	nccf_get_tripolar_grid.c nccf_get_start_end_bound_indices.c \
	nccf_get_position.h nccf_get_position.c nccf_get_multi_index.c \
	nccf_get_linear_weights.h nccf_get_linear_weights.c \
	nccf_get_flat_index.c nccf_get_cubedsphere_grid.c \
	nccf_get_bipolar_cap.c nccf_generate_id.c \
	nccf_find_next_indices.h nccf_find_next_indices.c \
	nccf_find_next_adjcnt_index.c nccf_find_next_adjacent.c \
	nccf_find_indices.h nccf_find_indices.c nccf_add_id_to_files.c \
	nccf_keyvalue.h nccf_keyvalue.c nccf_get_distance_in_coord.c \
	nccf_get_distance_in_coord.h nccf_linear_interp_mod.h \
	nccf_linear_interp_mod.c

# These files are created by the tests.
CLEANFILES = tst_*.nc libcf.mod
TESTS = $(check_PROGRAMS)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .f90 .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libcf_src.la: $(libcf_src_la_OBJECTS) $(libcf_src_la_DEPENDENCIES) $(EXTRA_libcf_src_la_DEPENDENCIES) 
	$(libcf_src_la_LINK) -rpath $(libdir) $(libcf_src_la_OBJECTS) $(libcf_src_la_LIBADD) $(LIBS)
libcff_src.la: $(libcff_src_la_OBJECTS) $(libcff_src_la_DEPENDENCIES) $(EXTRA_libcff_src_la_DEPENDENCIES) 
	$(FCLINK) $(am_libcff_src_la_rpath) $(libcff_src_la_OBJECTS) $(libcff_src_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
tst_coords$(EXEEXT): $(tst_coords_OBJECTS) $(tst_coords_DEPENDENCIES) $(EXTRA_tst_coords_DEPENDENCIES) 
	@rm -f tst_coords$(EXEEXT)
	$(LINK) $(tst_coords_OBJECTS) $(tst_coords_LDADD) $(LIBS)
tst_cvars$(EXEEXT): $(tst_cvars_OBJECTS) $(tst_cvars_DEPENDENCIES) $(EXTRA_tst_cvars_DEPENDENCIES) 
	@rm -f tst_cvars$(EXEEXT)
	$(LINK) $(tst_cvars_OBJECTS) $(tst_cvars_LDADD) $(LIBS)
tst_example_data$(EXEEXT): $(tst_example_data_OBJECTS) $(tst_example_data_DEPENDENCIES) $(EXTRA_tst_example_data_DEPENDENCIES) 
	@rm -f tst_example_data$(EXEEXT)
	$(LINK) $(tst_example_data_OBJECTS) $(tst_example_data_LDADD) $(LIBS)
tst_files$(EXEEXT): $(tst_files_OBJECTS) $(tst_files_DEPENDENCIES) $(EXTRA_tst_files_DEPENDENCIES) 
	@rm -f tst_files$(EXEEXT)
	$(LINK) $(tst_files_OBJECTS) $(tst_files_LDADD) $(LIBS)
tst_linear_interp$(EXEEXT): $(tst_linear_interp_OBJECTS) $(tst_linear_interp_DEPENDENCIES) $(EXTRA_tst_linear_interp_DEPENDENCIES) 
	@rm -f tst_linear_interp$(EXEEXT)
	$(LINK) $(tst_linear_interp_OBJECTS) $(tst_linear_interp_LDADD) $(LIBS)
tst_listitem$(EXEEXT): $(tst_listitem_OBJECTS) $(tst_listitem_DEPENDENCIES) $(EXTRA_tst_listitem_DEPENDENCIES) 
	@rm -f tst_listitem$(EXEEXT)
	$(LINK) $(tst_listitem_OBJECTS) $(tst_listitem_LDADD) $(LIBS)
tst_nccf_find_adjacent$(EXEEXT): $(tst_nccf_find_adjacent_OBJECTS) $(tst_nccf_find_adjacent_DEPENDENCIES) $(EXTRA_tst_nccf_find_adjacent_DEPENDENCIES) 
	@rm -f tst_nccf_find_adjacent$(EXEEXT)
	$(LINK) $(tst_nccf_find_adjacent_OBJECTS) $(tst_nccf_find_adjacent_LDADD) $(LIBS)
tst_nccf_generate_id$(EXEEXT): $(tst_nccf_generate_id_OBJECTS) $(tst_nccf_generate_id_DEPENDENCIES) $(EXTRA_tst_nccf_generate_id_DEPENDENCIES) 
	@rm -f tst_nccf_generate_id$(EXEEXT)
	$(LINK) $(tst_nccf_generate_id_OBJECTS) $(tst_nccf_generate_id_LDADD) $(LIBS)
tst_nccf_get_bipolar_cap$(EXEEXT): $(tst_nccf_get_bipolar_cap_OBJECTS) $(tst_nccf_get_bipolar_cap_DEPENDENCIES) $(EXTRA_tst_nccf_get_bipolar_cap_DEPENDENCIES) 
	@rm -f tst_nccf_get_bipolar_cap$(EXEEXT)
	$(LINK) $(tst_nccf_get_bipolar_cap_OBJECTS) $(tst_nccf_get_bipolar_cap_LDADD) $(LIBS)
tst_nccf_get_cubedsphere_grid$(EXEEXT): $(tst_nccf_get_cubedsphere_grid_OBJECTS) $(tst_nccf_get_cubedsphere_grid_DEPENDENCIES) $(EXTRA_tst_nccf_get_cubedsphere_grid_DEPENDENCIES) 
	@rm -f tst_nccf_get_cubedsphere_grid$(EXEEXT)
	$(LINK) $(tst_nccf_get_cubedsphere_grid_OBJECTS) $(tst_nccf_get_cubedsphere_grid_LDADD) $(LIBS)
tst_nccf_get_flat_index$(EXEEXT): $(tst_nccf_get_flat_index_OBJECTS) $(tst_nccf_get_flat_index_DEPENDENCIES) $(EXTRA_tst_nccf_get_flat_index_DEPENDENCIES) 
	@rm -f tst_nccf_get_flat_index$(EXEEXT)
	$(LINK) $(tst_nccf_get_flat_index_OBJECTS) $(tst_nccf_get_flat_index_LDADD) $(LIBS)
tst_nccf_get_tripolar_grid$(EXEEXT): $(tst_nccf_get_tripolar_grid_OBJECTS) $(tst_nccf_get_tripolar_grid_DEPENDENCIES) $(EXTRA_tst_nccf_get_tripolar_grid_DEPENDENCIES) 
	@rm -f tst_nccf_get_tripolar_grid$(EXEEXT)
	$(LINK) $(tst_nccf_get_tripolar_grid_OBJECTS) $(tst_nccf_get_tripolar_grid_LDADD) $(LIBS)
tst_nccf_get_tripolar_halfgrid$(EXEEXT): $(tst_nccf_get_tripolar_halfgrid_OBJECTS) $(tst_nccf_get_tripolar_halfgrid_DEPENDENCIES) $(EXTRA_tst_nccf_get_tripolar_halfgrid_DEPENDENCIES) 
	@rm -f tst_nccf_get_tripolar_halfgrid$(EXEEXT)
	$(LINK) $(tst_nccf_get_tripolar_halfgrid_OBJECTS) $(tst_nccf_get_tripolar_halfgrid_LDADD) $(LIBS)
tst_nccf_index2vector$(EXEEXT): $(tst_nccf_index2vector_OBJECTS) $(tst_nccf_index2vector_DEPENDENCIES) $(EXTRA_tst_nccf_index2vector_DEPENDENCIES) 
	@rm -f tst_nccf_index2vector$(EXEEXT)
	$(LINK) $(tst_nccf_index2vector_OBJECTS) $(tst_nccf_index2vector_LDADD) $(LIBS)
tst_nccf_keyvalue$(EXEEXT): $(tst_nccf_keyvalue_OBJECTS) $(tst_nccf_keyvalue_DEPENDENCIES) $(EXTRA_tst_nccf_keyvalue_DEPENDENCIES) 
	@rm -f tst_nccf_keyvalue$(EXEEXT)
	$(LINK) $(tst_nccf_keyvalue_OBJECTS) $(tst_nccf_keyvalue_LDADD) $(LIBS)
tst_nccf_linear_interp_mask$(EXEEXT): $(tst_nccf_linear_interp_mask_OBJECTS) $(tst_nccf_linear_interp_mask_DEPENDENCIES) $(EXTRA_tst_nccf_linear_interp_mask_DEPENDENCIES) 
	@rm -f tst_nccf_linear_interp_mask$(EXEEXT)
	$(LINK) $(tst_nccf_linear_interp_mask_OBJECTS) $(tst_nccf_linear_interp_mask_LDADD) $(LIBS)
tst_nccf_varObj$(EXEEXT): $(tst_nccf_varObj_OBJECTS) $(tst_nccf_varObj_DEPENDENCIES) $(EXTRA_tst_nccf_varObj_DEPENDENCIES) 
	@rm -f tst_nccf_varObj$(EXEEXT)
	$(LINK) $(tst_nccf_varObj_OBJECTS) $(tst_nccf_varObj_LDADD) $(LIBS)
tst_princeton$(EXEEXT): $(tst_princeton_OBJECTS) $(tst_princeton_DEPENDENCIES) $(EXTRA_tst_princeton_DEPENDENCIES) 
	@rm -f tst_princeton$(EXEEXT)
	$(LINK) $(tst_princeton_OBJECTS) $(tst_princeton_LDADD) $(LIBS)
tst_solve$(EXEEXT): $(tst_solve_OBJECTS) $(tst_solve_DEPENDENCIES) $(EXTRA_tst_solve_DEPENDENCIES) 
	@rm -f tst_solve$(EXEEXT)
	$(LINK) $(tst_solve_OBJECTS) $(tst_solve_LDADD) $(LIBS)
tst_subsets$(EXEEXT): $(tst_subsets_OBJECTS) $(tst_subsets_DEPENDENCIES) $(EXTRA_tst_subsets_DEPENDENCIES) 
	@rm -f tst_subsets$(EXEEXT)
	$(LINK) $(tst_subsets_OBJECTS) $(tst_subsets_LDADD) $(LIBS)
tst_vars$(EXEEXT): $(tst_vars_OBJECTS) $(tst_vars_DEPENDENCIES) $(EXTRA_tst_vars_DEPENDENCIES) 
	@rm -f tst_vars$(EXEEXT)
	$(LINK) $(tst_vars_OBJECTS) $(tst_vars_LDADD) $(LIBS)
tst_vert$(EXEEXT): $(tst_vert_OBJECTS) $(tst_vert_DEPENDENCIES) $(EXTRA_tst_vert_DEPENDENCIES) 
	@rm -f tst_vert$(EXEEXT)
	$(LINK) $(tst_vert_OBJECTS) $(tst_vert_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cdTimeConv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfcvars.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cferror.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cffiles.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cflistitem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfsubsets.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cfvars.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libcfAddOn.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_add_id_to_files.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_find_indices.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_find_next_adjacent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_find_next_adjcnt_index.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_find_next_indices.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_generate_id.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_get_bipolar_cap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_get_cubedsphere_grid.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_get_distance_in_coord.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_get_flat_index.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_get_linear_weights.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_get_multi_index.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_get_position.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_get_start_end_bound_indices.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_get_tripolar_grid.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_get_tripolar_halfgrid.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_handle_error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_index2vector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_index_to_corner_vector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_keyvalue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_linear_interp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_linear_interp_mod.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_linesearch_indices.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_put_var_slice_text.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_solve.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_strerror.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccf_varObj.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nccoord.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timeArith.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timeConv.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_coords.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_cvars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_example_data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_files.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_linear_interp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_listitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_find_adjacent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_generate_id.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_get_bipolar_cap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_get_cubedsphere_grid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_get_flat_index.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_get_tripolar_grid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_get_tripolar_halfgrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_index2vector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_keyvalue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_linear_interp_mask.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_nccf_varObj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_princeton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_solve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_subsets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_vars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tst_vert.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.f90.o:
	$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

.f90.obj:
	$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) `$(CYGPATH_W) '$<'`

.f90.lo:
	$(LTFCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-libLTLIBRARIES

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES


# created by one of the unit tests
clean-local:
	-rm -rf tst_linear_interp_tripolar.py

# Rule to build Fortran 2003 code.
#cfcvars.o:cfcvsars.f90
#	$(FC) -c $(AM_FCFLAGS) $(FCFLAGS) -c $? -o $@

tst_f03_file.o: tst_f03_file.f90
	$(FC) -c $(AM_FCFLAGS) $(FCFLAGS) -c $? -o $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
